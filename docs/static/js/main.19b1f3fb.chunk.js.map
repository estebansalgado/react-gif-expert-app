{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","categoria","ReactDOM","render","document","getElementById"],"mappings":"oMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACPC,mBAAS,KADF,mBACpCC,EADoC,KACxBC,EADwB,KAY5C,OACI,sBAAMC,SANU,SAACC,GACjBA,EAAEC,iBACFN,GAAc,SAACO,GAAD,OAAQL,GAAR,mBAAsBK,OACpCJ,EAAc,KAGd,SACG,uBACAK,KAAK,OACLC,MAAOP,EACPQ,SAfoB,SAACL,GACxBF,EAAcE,EAAEM,OAAOF,a,8BCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEkCC,UAAUH,GAF5C,+DAGDI,MAAMF,GAHL,cAGbG,EAHa,gBAICA,EAAKC,OAJN,uBAIZC,EAJY,EAIZA,KAEDC,EAAKD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACrB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAVtB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OACI,sBAAKc,UAAU,8CAAf,UAEI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCJHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EACbZ,mBAAS,CAC/BmB,KAAK,GACLa,SAAQ,IAH2B,mBAChCC,EADgC,KACzBC,EADyB,KAiBvC,OAVCC,qBAAU,WAERxB,EAAQC,GAAUwB,MAAK,SAAAC,GACDH,EAAS,CAACf,KAAKkB,EACXL,SAAQ,SAGlC,CAACpB,IAGGqB,EDbsBK,CAAa1B,GAA7Ba,EAFuB,EAE5BN,KAAYa,EAFgB,EAEhBA,QAGnB,OACI,qCACA,oBAAKJ,UAAU,yCAAf,SAAyDhB,IACxDoB,GAAU,mBAAGJ,UAAU,mCAAb,qBAEX,qBAAKA,UAAU,YAAf,SAGCH,EAAOJ,KAAI,SAACC,GAAD,OACR,wBAAC,EAAD,2BAAkBA,GAAlB,IAAuBiB,IAAKjB,EAAIC,eEe7BiB,EA7BI,WAAK,IAAD,EAEiBxC,mBAAS,CAAC,QAF3B,mBAEZyC,EAFY,KAEA1C,EAFA,KASnB,OACI,qCACI,8CACA,cAAC,EAAD,CAAcA,cAAeA,IAE7B,uBAGA,6BAGI0C,EAAWpB,KAAI,SAACqB,GAAD,OACX,cAAC,EAAD,CAAyB9B,SAAU8B,GAArBA,Y,MCnBlCC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.19b1f3fb.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types' \r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n     const [inputValue, setInputValue] = useState(' ');\r\n     const handleInputChange = (e)=>{\r\n        setInputValue(e.target.value);\r\n\r\n     }\r\n\r\n     const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        setCategories((cat)=>[inputValue,...cat,]);\r\n        setInputValue('');\r\n     }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n           <input \r\n           type=\"text\" \r\n           value={inputValue} \r\n           onChange={handleInputChange}\r\n\r\n           />\r\n           \r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes={\r\n    setCategories:PropTypes.func.isRequired\r\n}\r\n\r\n","export const getGifs = async (category)=>{\r\n      \r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=34cb44xNA6ftYF5HckhKU5pqiNq1eb5H`;\r\n    const resp= await fetch(url);\r\n    const {data}= await resp.json();\r\n \r\n    const gifs=data.map(img=>{\r\n        return {\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n      \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n  \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInDown \">\r\n         \r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport {GifGridItem} from './GifGridItem'\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images,loading}=useFetchGifs(category); \r\n   \r\n\r\n    return (\r\n        <>\r\n        <h3  className=\"animate__animated animate__fadeInDown \">{category}</h3>\r\n        {loading&& <p className=\"animate__animated animate__flash\">loading</p>}\r\n       \r\n        <div className=\"card-grid\">\r\n      \r\n       \r\n        {images.map((img)=>(\r\n            <GifGridItem  {...img} key={img.id}/>\r\n            ))\r\n\r\n        }\r\n           \r\n       \r\n            \r\n        </div> \r\n        </>\r\n    )\r\n}\r\n","import {useState,useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\nexport const useFetchGifs = (category) => {\r\n   const [state, setState] = useState({\r\n       data:[],\r\n       loading:true\r\n   });\r\n\r\n   \r\n    useEffect(()=>{\r\n      //  getGifs(category).then(imgs=>setImages(imgs));\r\n      getGifs(category).then(imgs=>{                      \r\n                            setState({data:imgs,\r\n                                loading:false});           \r\n                        \r\n                    });\r\n    },[category])\r\n\r\n  \r\n   return state;\r\n}\r\n","import React,{useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport {GifGrid} from './components/GifGrid'\r\n\r\nconst GifExpertApp=()=>{\r\n    \r\n    const [categories, setCategories] = useState(['got']);\r\n\r\n  //  const handleClick = (e)=>{\r\n       // setCategories([...categories,'felix el gato']);\r\n       // setCategories((cat)=>[...cat,'HunterXHunter']);\r\n    //}\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory  setCategories={setCategories}/>\r\n\r\n            <hr/>\r\n\r\n\r\n            <ol>\r\n           \r\n            {\r\n                categories.map((categoria)=> (\r\n                    <GifGrid key={categoria} category={categoria}/>\r\n                    ))\r\n            }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp'\nimport './index.css';\n\n\nReactDOM.render( \n    <GifExpertApp/> ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}